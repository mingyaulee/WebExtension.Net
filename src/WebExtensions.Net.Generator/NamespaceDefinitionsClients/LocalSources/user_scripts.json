[
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "user_scripts": {
            "optional": true,
            "type": "object",
            "properties": {
              "api_script": {
                "optional": true,
                "$ref": "manifest.ExtensionURL"
              }
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "userScripts",
    "permissions": [
      "manifest:user_scripts"
    ],
    "types": [
      {
        "id": "UserScriptOptions",
        "description": "Details of a user script",
        "type": "object",
        "properties": {
          "js": {
            "description": "The list of JS files to inject",
            "optional": false,
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "extensionTypes.ExtensionFileOrCode"
            }
          },
          "scriptMetadata": {
            "description": "An opaque user script metadata value",
            "optional": true,
            "$ref": "extensionTypes.PlainJSONValue"
          },
          "matches": {
            "optional": false,
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "manifest.MatchPattern"
            }
          },
          "excludeMatches": {
            "optional": true,
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "manifest.MatchPattern"
            }
          },
          "includeGlobs": {
            "optional": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excludeGlobs": {
            "optional": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allFrames": {
            "description": "If allFrames is \u003Ccode\u003Etrue\u003C/code\u003E, implies that the JavaScript should be injected into all frames of current page. By default, it\u0027s \u003Ccode\u003Efalse\u003C/code\u003E and is only injected into the top frame.",
            "optional": true,
            "type": "boolean"
          },
          "matchAboutBlank": {
            "description": "If matchAboutBlank is true, then the code is also injected in about:blank and about:srcdoc frames if your extension has access to its parent document. Code cannot be inserted in top-level about:-frames. By default it is \u003Ccode\u003Efalse\u003C/code\u003E.",
            "optional": true,
            "type": "boolean"
          },
          "runAt": {
            "description": "The soonest that the JavaScript will be injected into the tab. Defaults to \u0022document_idle\u0022.",
            "optional": true,
            "$ref": "extensionTypes.RunAt"
          },
          "cookieStoreId": {
            "description": "limit the set of matched tabs to those that belong to the given cookie store id",
            "optional": true,
            "choices": [
              {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      {
        "id": "RegisteredUserScript",
        "description": "An object that represents a user script registered programmatically",
        "type": "object",
        "functions": [
          {
            "name": "unregister",
            "description": "Unregister a user script registered programmatically",
            "async": true,
            "type": "function",
            "parameters": []
          }
        ]
      }
    ],
    "functions": [
      {
        "name": "register",
        "description": "Register a user script programmatically given its $(ref:userScripts.UserScriptOptions), and resolves to a $(ref:userScripts.RegisteredUserScript) instance",
        "async": true,
        "type": "function",
        "parameters": [
          {
            "name": "userScriptOptions",
            "$ref": "UserScriptOptions"
          }
        ]
      }
    ]
  }
]